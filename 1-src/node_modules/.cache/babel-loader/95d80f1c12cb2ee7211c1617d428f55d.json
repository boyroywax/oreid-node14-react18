{"ast":null,"code":"//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : // cf. https://github.com/dankogai/js-base64/issues/119\n  function () {\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var gBase64 = factory();\n\n    gBase64.noConflict = function () {\n      global.Base64 = _Base64;\n      return gBase64;\n    };\n\n    if (global.Meteor) {\n      // Meteor.js\n      Base64 = gBase64;\n    }\n\n    global.Base64 = gBase64;\n  }();\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this, function () {\n  'use strict';\n  /**\n   *  base64.ts\n   *\n   *  Licensed under the BSD 3-Clause License.\n   *    http://opensource.org/licenses/BSD-3-Clause\n   *\n   *  References:\n   *    http://en.wikipedia.org/wiki/Base64\n   *\n   * @author Dan Kogai (https://github.com/dankogai)\n   */\n\n  var version = '3.7.2';\n  /**\n   * @deprecated use lowercase `version`.\n   */\n\n  var VERSION = version;\n\n  var _hasatob = typeof atob === 'function';\n\n  var _hasbtoa = typeof btoa === 'function';\n\n  var _hasBuffer = typeof Buffer === 'function';\n\n  var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n\n  var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n\n  var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var b64chs = Array.prototype.slice.call(b64ch);\n\n  var b64tab = function (a) {\n    var tab = {};\n    a.forEach(function (c, i) {\n      return tab[c] = i;\n    });\n    return tab;\n  }(b64chs);\n\n  var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n\n  var _fromCC = String.fromCharCode.bind(String);\n\n  var _U8Afrom = typeof Uint8Array.from === 'function' ? Uint8Array.from.bind(Uint8Array) : function (it, fn) {\n    if (fn === void 0) {\n      fn = function (x) {\n        return x;\n      };\n    }\n\n    return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\n  };\n\n  var _mkUriSafe = function (src) {\n    return src.replace(/=/g, '').replace(/[+\\/]/g, function (m0) {\n      return m0 == '+' ? '-' : '_';\n    });\n  };\n\n  var _tidyB64 = function (s) {\n    return s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n  };\n  /**\n   * polyfill version of `btoa`\n   */\n\n\n  var btoaPolyfill = function (bin) {\n    // console.log('polyfilled');\n    var u32,\n        c0,\n        c1,\n        c2,\n        asc = '';\n    var pad = bin.length % 3;\n\n    for (var i = 0; i < bin.length;) {\n      if ((c0 = bin.charCodeAt(i++)) > 255 || (c1 = bin.charCodeAt(i++)) > 255 || (c2 = bin.charCodeAt(i++)) > 255) throw new TypeError('invalid character found');\n      u32 = c0 << 16 | c1 << 8 | c2;\n      asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];\n    }\n\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n  };\n  /**\n   * does what `window.btoa` of web browsers do.\n   * @param {String} bin binary string\n   * @returns {string} Base64-encoded string\n   */\n\n\n  var _btoa = _hasbtoa ? function (bin) {\n    return btoa(bin);\n  } : _hasBuffer ? function (bin) {\n    return Buffer.from(bin, 'binary').toString('base64');\n  } : btoaPolyfill;\n\n  var _fromUint8Array = _hasBuffer ? function (u8a) {\n    return Buffer.from(u8a).toString('base64');\n  } : function (u8a) {\n    // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n    var maxargs = 0x1000;\n    var strs = [];\n\n    for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n      strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n    }\n\n    return _btoa(strs.join(''));\n  };\n  /**\n   * converts a Uint8Array to a Base64 string.\n   * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 ยง5\n   * @returns {string} Base64 string\n   */\n\n\n  var fromUint8Array = function (u8a, urlsafe) {\n    if (urlsafe === void 0) {\n      urlsafe = false;\n    }\n\n    return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n  }; // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n  // const utob = (src: string) => unescape(encodeURIComponent(src));\n  // reverting good old fationed regexp\n\n\n  var cb_utob = function (c) {\n    if (c.length < 2) {\n      var cc = c.charCodeAt(0);\n      return cc < 0x80 ? c : cc < 0x800 ? _fromCC(0xc0 | cc >>> 6) + _fromCC(0x80 | cc & 0x3f) : _fromCC(0xe0 | cc >>> 12 & 0x0f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n    } else {\n      var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n      return _fromCC(0xf0 | cc >>> 18 & 0x07) + _fromCC(0x80 | cc >>> 12 & 0x3f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n    }\n  };\n\n  var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n  /**\n   * @deprecated should have been internal use only.\n   * @param {string} src UTF-8 string\n   * @returns {string} UTF-16 string\n   */\n\n  var utob = function (u) {\n    return u.replace(re_utob, cb_utob);\n  }; //\n\n\n  var _encode = _hasBuffer ? function (s) {\n    return Buffer.from(s, 'utf8').toString('base64');\n  } : _TE ? function (s) {\n    return _fromUint8Array(_TE.encode(s));\n  } : function (s) {\n    return _btoa(utob(s));\n  };\n  /**\n   * converts a UTF-8-encoded string to a Base64 string.\n   * @param {boolean} [urlsafe] if `true` make the result URL-safe\n   * @returns {string} Base64 string\n   */\n\n\n  var encode = function (src, urlsafe) {\n    if (urlsafe === void 0) {\n      urlsafe = false;\n    }\n\n    return urlsafe ? _mkUriSafe(_encode(src)) : _encode(src);\n  };\n  /**\n   * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 ยง5.\n   * @returns {string} Base64 string\n   */\n\n\n  var encodeURI = function (src) {\n    return encode(src, true);\n  }; // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n  // const btou = (src: string) => decodeURIComponent(escape(src));\n  // reverting good old fationed regexp\n\n\n  var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n\n  var cb_btou = function (cccc) {\n    switch (cccc.length) {\n      case 4:\n        var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n            offset = cp - 0x10000;\n        return _fromCC((offset >>> 10) + 0xD800) + _fromCC((offset & 0x3FF) + 0xDC00);\n\n      case 3:\n        return _fromCC((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n\n      default:\n        return _fromCC((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n    }\n  };\n  /**\n   * @deprecated should have been internal use only.\n   * @param {string} src UTF-16 string\n   * @returns {string} UTF-8 string\n   */\n\n\n  var btou = function (b) {\n    return b.replace(re_btou, cb_btou);\n  };\n  /**\n   * polyfill version of `atob`\n   */\n\n\n  var atobPolyfill = function (asc) {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc)) throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    var u24,\n        bin = '',\n        r1,\n        r2;\n\n    for (var i = 0; i < asc.length;) {\n      u24 = b64tab[asc.charAt(i++)] << 18 | b64tab[asc.charAt(i++)] << 12 | (r1 = b64tab[asc.charAt(i++)]) << 6 | (r2 = b64tab[asc.charAt(i++)]);\n      bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n\n    return bin;\n  };\n  /**\n   * does what `window.atob` of web browsers do.\n   * @param {String} asc Base64-encoded string\n   * @returns {string} binary string\n   */\n\n\n  var _atob = _hasatob ? function (asc) {\n    return atob(_tidyB64(asc));\n  } : _hasBuffer ? function (asc) {\n    return Buffer.from(asc, 'base64').toString('binary');\n  } : atobPolyfill; //\n\n\n  var _toUint8Array = _hasBuffer ? function (a) {\n    return _U8Afrom(Buffer.from(a, 'base64'));\n  } : function (a) {\n    return _U8Afrom(_atob(a), function (c) {\n      return c.charCodeAt(0);\n    });\n  };\n  /**\n   * converts a Base64 string to a Uint8Array.\n   */\n\n\n  var toUint8Array = function (a) {\n    return _toUint8Array(_unURI(a));\n  }; //\n\n\n  var _decode = _hasBuffer ? function (a) {\n    return Buffer.from(a, 'base64').toString('utf8');\n  } : _TD ? function (a) {\n    return _TD.decode(_toUint8Array(a));\n  } : function (a) {\n    return btou(_atob(a));\n  };\n\n  var _unURI = function (a) {\n    return _tidyB64(a.replace(/[-_]/g, function (m0) {\n      return m0 == '-' ? '+' : '/';\n    }));\n  };\n  /**\n   * converts a Base64 string to a UTF-8 string.\n   * @param {String} src Base64 string.  Both normal and URL-safe are supported\n   * @returns {string} UTF-8 string\n   */\n\n\n  var decode = function (src) {\n    return _decode(_unURI(src));\n  };\n  /**\n   * check if a value is a valid Base64 string\n   * @param {String} src a value to check\n    */\n\n\n  var isValid = function (src) {\n    if (typeof src !== 'string') return false;\n    var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n  }; //\n\n\n  var _noEnum = function (v) {\n    return {\n      value: v,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    };\n  };\n  /**\n   * extend String.prototype with relevant methods\n   */\n\n\n  var extendString = function () {\n    var _add = function (name, body) {\n      return Object.defineProperty(String.prototype, name, _noEnum(body));\n    };\n\n    _add('fromBase64', function () {\n      return decode(this);\n    });\n\n    _add('toBase64', function (urlsafe) {\n      return encode(this, urlsafe);\n    });\n\n    _add('toBase64URI', function () {\n      return encode(this, true);\n    });\n\n    _add('toBase64URL', function () {\n      return encode(this, true);\n    });\n\n    _add('toUint8Array', function () {\n      return toUint8Array(this);\n    });\n  };\n  /**\n   * extend Uint8Array.prototype with relevant methods\n   */\n\n\n  var extendUint8Array = function () {\n    var _add = function (name, body) {\n      return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    };\n\n    _add('toBase64', function (urlsafe) {\n      return fromUint8Array(this, urlsafe);\n    });\n\n    _add('toBase64URI', function () {\n      return fromUint8Array(this, true);\n    });\n\n    _add('toBase64URL', function () {\n      return fromUint8Array(this, true);\n    });\n  };\n  /**\n   * extend Builtin prototypes with relevant methods\n   */\n\n\n  var extendBuiltins = function () {\n    extendString();\n    extendUint8Array();\n  };\n\n  var gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n  }; //\n  // export Base64 to the namespace\n  //\n  // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n  // gBase64.Base64 = Object.assign({}, gBase64);\n\n  gBase64.Base64 = {};\n  Object.keys(gBase64).forEach(function (k) {\n    return gBase64.Base64[k] = gBase64[k];\n  });\n  return gBase64;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","_Base64","Base64","gBase64","noConflict","Meteor","self","window","version","VERSION","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64ch","b64chs","Array","prototype","slice","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","x","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","length","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","l","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","isValid","_noEnum","v","value","enumerable","writable","configurable","extendString","_add","name","body","Object","defineProperty","extendUint8Array","extendBuiltins","fromBase64","toBase64","encodeURL","keys","k"],"sources":["/Users/j/Code/ore-test-barebones-node-v14/create-react-app/react-app-test/node_modules/js-base64/base64.js"],"sourcesContent":["//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.2';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasatob = typeof atob === 'function';\n    var _hasbtoa = typeof btoa === 'function';\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it, fn) {\n            if (fn === void 0) { fn = function (x) { return x; }; }\n            return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\n        };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 ยง5\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 ยง5.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a), function (c) { return c.charCodeAt(0); }); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}