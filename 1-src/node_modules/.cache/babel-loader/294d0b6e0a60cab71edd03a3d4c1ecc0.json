{"ast":null,"code":"import { Decoder } from \"./Decoder.mjs\";\nexport var defaultDecodeOptions = {};\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n */\n\nexport function decode(buffer, options) {\n  if (options === void 0) {\n    options = defaultDecodeOptions;\n  }\n\n  var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n  return decoder.decode(buffer);\n}\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n */\n\nexport function decodeMulti(buffer, options) {\n  if (options === void 0) {\n    options = defaultDecodeOptions;\n  }\n\n  var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n  return decoder.decodeMulti(buffer);\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AA0CA,OAAO,IAAMC,oBAAoB,GAAkB,EAA5C;AAEP;;;;;;;AAMA,OAAM,SAAUC,MAAV,CACJC,MADI,EAEJC,OAFI,EAE6E;EAAjF;IAAAA,UAAsDH,oBAAtD;EAAiF;;EAEjF,IAAMI,OAAO,GAAG,IAAIL,OAAJ,CACdI,OAAO,CAACE,cADM,EAEbF,OAA6C,CAACG,OAFjC,EAGdH,OAAO,CAACI,YAHM,EAIdJ,OAAO,CAACK,YAJM,EAKdL,OAAO,CAACM,cALM,EAMdN,OAAO,CAACO,YANM,EAOdP,OAAO,CAACQ,YAPM,CAAhB;EASA,OAAOP,OAAO,CAACH,MAAR,CAAeC,MAAf,CAAP;AACD;AAED;;;;;AAIA,OAAM,SAAUU,WAAV,CACJV,MADI,EAEJC,OAFI,EAE6E;EAAjF;IAAAA,UAAsDH,oBAAtD;EAAiF;;EAEjF,IAAMI,OAAO,GAAG,IAAIL,OAAJ,CACdI,OAAO,CAACE,cADM,EAEbF,OAA6C,CAACG,OAFjC,EAGdH,OAAO,CAACI,YAHM,EAIdJ,OAAO,CAACK,YAJM,EAKdL,OAAO,CAACM,cALM,EAMdN,OAAO,CAACO,YANM,EAOdP,OAAO,CAACQ,YAPM,CAAhB;EASA,OAAOP,OAAO,CAACQ,WAAR,CAAoBV,MAApB,CAAP;AACD","names":["Decoder","defaultDecodeOptions","decode","buffer","options","decoder","extensionCodec","context","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","decodeMulti"],"sources":["/Users/j/Code/ore-test-barebones-node-v14/create-react-app/react-app-test/node_modules/@msgpack/msgpack/src/decode.ts"],"sourcesContent":["import { Decoder } from \"./Decoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n"]},"metadata":{},"sourceType":"module"}