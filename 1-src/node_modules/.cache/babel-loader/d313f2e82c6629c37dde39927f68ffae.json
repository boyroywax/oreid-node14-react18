{"ast":null,"code":"export function ensureUint8Array(buffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\nexport function createDataView(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  var bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,gBAAV,CAA2BC,MAA3B,EAAiG;EACrG,IAAIA,MAAM,YAAYC,UAAtB,EAAkC;IAChC,OAAOD,MAAP;EACD,CAFD,MAEO,IAAIE,WAAW,CAACC,MAAZ,CAAmBH,MAAnB,CAAJ,EAAgC;IACrC,OAAO,IAAIC,UAAJ,CAAeD,MAAM,CAACA,MAAtB,EAA8BA,MAAM,CAACI,UAArC,EAAiDJ,MAAM,CAACK,UAAxD,CAAP;EACD,CAFM,MAEA,IAAIL,MAAM,YAAYE,WAAtB,EAAmC;IACxC,OAAO,IAAID,UAAJ,CAAeD,MAAf,CAAP;EACD,CAFM,MAEA;IACL;IACA,OAAOC,UAAU,CAACK,IAAX,CAAgBN,MAAhB,CAAP;EACD;AACF;AAED,OAAM,SAAUO,cAAV,CAAyBP,MAAzB,EAAkF;EACtF,IAAIA,MAAM,YAAYE,WAAtB,EAAmC;IACjC,OAAO,IAAIM,QAAJ,CAAaR,MAAb,CAAP;EACD;;EAED,IAAMS,UAAU,GAAGV,gBAAgB,CAACC,MAAD,CAAnC;EACA,OAAO,IAAIQ,QAAJ,CAAaC,UAAU,CAACT,MAAxB,EAAgCS,UAAU,CAACL,UAA3C,EAAuDK,UAAU,CAACJ,UAAlE,CAAP;AACD","names":["ensureUint8Array","buffer","Uint8Array","ArrayBuffer","isView","byteOffset","byteLength","from","createDataView","DataView","bufferView"],"sources":["/Users/j/Code/ore-test-barebones-node-v14/create-react-app/react-app-test/node_modules/@msgpack/msgpack/src/utils/typedArrays.ts"],"sourcesContent":["export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n"]},"metadata":{},"sourceType":"module"}