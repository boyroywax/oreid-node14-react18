{"ast":null,"code":"\"use strict\";\n/**\n * @module Numeric\n */\n// copyright defined in eosjs/LICENSE.txt\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ripemd160 = require('./ripemd').RIPEMD160.hash;\n\nvar base58Chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfunction create_base58_map() {\n  var base58M = Array(256).fill(-1);\n\n  for (var i = 0; i < base58Chars.length; ++i) {\n    base58M[base58Chars.charCodeAt(i)] = i;\n  }\n\n  return base58M;\n}\n\nvar base58Map = create_base58_map();\n\nfunction create_base64_map() {\n  var base64M = Array(256).fill(-1);\n\n  for (var i = 0; i < base64Chars.length; ++i) {\n    base64M[base64Chars.charCodeAt(i)] = i;\n  }\n\n  base64M['='.charCodeAt(0)] = 0;\n  return base64M;\n}\n\nvar base64Map = create_base64_map();\n/** Is `bignum` a negative number? */\n\nfunction isNegative(bignum) {\n  return (bignum[bignum.length - 1] & 0x80) !== 0;\n}\n\nexports.isNegative = isNegative;\n/** Negate `bignum` */\n\nfunction negate(bignum) {\n  var carry = 1;\n\n  for (var i = 0; i < bignum.length; ++i) {\n    var x = (~bignum[i] & 0xff) + carry;\n    bignum[i] = x;\n    carry = x >> 8;\n  }\n}\n\nexports.negate = negate;\n/**\n * Convert an unsigned decimal number in `s` to a bignum\n * @param size bignum size (bytes)\n */\n\nfunction decimalToBinary(size, s) {\n  var result = new Uint8Array(size);\n\n  for (var i = 0; i < s.length; ++i) {\n    var srcDigit = s.charCodeAt(i);\n\n    if (srcDigit < '0'.charCodeAt(0) || srcDigit > '9'.charCodeAt(0)) {\n      throw new Error('invalid number');\n    }\n\n    var carry = srcDigit - '0'.charCodeAt(0);\n\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 10 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n\n    if (carry) {\n      throw new Error('number is out of range');\n    }\n  }\n\n  return result;\n}\n\nexports.decimalToBinary = decimalToBinary;\n/**\n * Convert a signed decimal number in `s` to a bignum\n * @param size bignum size (bytes)\n */\n\nfunction signedDecimalToBinary(size, s) {\n  var negative = s[0] === '-';\n\n  if (negative) {\n    s = s.substr(1);\n  }\n\n  var result = decimalToBinary(size, s);\n\n  if (negative) {\n    negate(result);\n\n    if (!isNegative(result)) {\n      throw new Error('number is out of range');\n    }\n  } else if (isNegative(result)) {\n    throw new Error('number is out of range');\n  }\n\n  return result;\n}\n\nexports.signedDecimalToBinary = signedDecimalToBinary;\n/**\n * Convert `bignum` to an unsigned decimal number\n * @param minDigits 0-pad result to this many digits\n */\n\nfunction binaryToDecimal(bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  var result = Array(minDigits).fill('0'.charCodeAt(0));\n\n  for (var i = bignum.length - 1; i >= 0; --i) {\n    var carry = bignum[i];\n\n    for (var j = 0; j < result.length; ++j) {\n      var x = (result[j] - '0'.charCodeAt(0) << 8) + carry;\n      result[j] = '0'.charCodeAt(0) + x % 10;\n      carry = x / 10 | 0;\n    }\n\n    while (carry) {\n      result.push('0'.charCodeAt(0) + carry % 10);\n      carry = carry / 10 | 0;\n    }\n  }\n\n  result.reverse();\n  return String.fromCharCode.apply(String, __spread(result));\n}\n\nexports.binaryToDecimal = binaryToDecimal;\n/**\n * Convert `bignum` to a signed decimal number\n * @param minDigits 0-pad result to this many digits\n */\n\nfunction signedBinaryToDecimal(bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  if (isNegative(bignum)) {\n    var x = bignum.slice();\n    negate(x);\n    return '-' + binaryToDecimal(x, minDigits);\n  }\n\n  return binaryToDecimal(bignum, minDigits);\n}\n\nexports.signedBinaryToDecimal = signedBinaryToDecimal;\n/**\n * Convert an unsigned base-58 number in `s` to a bignum\n * @param size bignum size (bytes)\n */\n\nfunction base58ToBinary(size, s) {\n  var result = new Uint8Array(size);\n\n  for (var i = 0; i < s.length; ++i) {\n    var carry = base58Map[s.charCodeAt(i)];\n\n    if (carry < 0) {\n      throw new Error('invalid base-58 value');\n    }\n\n    for (var j = 0; j < size; ++j) {\n      var x = result[j] * 58 + carry;\n      result[j] = x;\n      carry = x >> 8;\n    }\n\n    if (carry) {\n      throw new Error('base-58 value is out of range');\n    }\n  }\n\n  result.reverse();\n  return result;\n}\n\nexports.base58ToBinary = base58ToBinary;\n/**\n * Convert `bignum` to a base-58 number\n * @param minDigits 0-pad result to this many digits\n */\n\nfunction binaryToBase58(bignum, minDigits) {\n  if (minDigits === void 0) {\n    minDigits = 1;\n  }\n\n  var e_1, _a, e_2, _b;\n\n  var result = [];\n\n  try {\n    for (var bignum_1 = __values(bignum), bignum_1_1 = bignum_1.next(); !bignum_1_1.done; bignum_1_1 = bignum_1.next()) {\n      var byte = bignum_1_1.value;\n      var carry = byte;\n\n      for (var j = 0; j < result.length; ++j) {\n        var x = (base58Map[result[j]] << 8) + carry;\n        result[j] = base58Chars.charCodeAt(x % 58);\n        carry = x / 58 | 0;\n      }\n\n      while (carry) {\n        result.push(base58Chars.charCodeAt(carry % 58));\n        carry = carry / 58 | 0;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (bignum_1_1 && !bignum_1_1.done && (_a = bignum_1.return)) _a.call(bignum_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  try {\n    for (var bignum_2 = __values(bignum), bignum_2_1 = bignum_2.next(); !bignum_2_1.done; bignum_2_1 = bignum_2.next()) {\n      var byte = bignum_2_1.value;\n\n      if (byte) {\n        break;\n      } else {\n        result.push('1'.charCodeAt(0));\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (bignum_2_1 && !bignum_2_1.done && (_b = bignum_2.return)) _b.call(bignum_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  result.reverse();\n  return String.fromCharCode.apply(String, __spread(result));\n}\n\nexports.binaryToBase58 = binaryToBase58;\n/** Convert an unsigned base-64 number in `s` to a bignum */\n\nfunction base64ToBinary(s) {\n  var len = s.length;\n\n  if ((len & 3) === 1 && s[len - 1] === '=') {\n    len -= 1;\n  } // fc appends an extra '='\n\n\n  if ((len & 3) !== 0) {\n    throw new Error('base-64 value is not padded correctly');\n  }\n\n  var groups = len >> 2;\n  var bytes = groups * 3;\n\n  if (len > 0 && s[len - 1] === '=') {\n    if (s[len - 2] === '=') {\n      bytes -= 2;\n    } else {\n      bytes -= 1;\n    }\n  }\n\n  var result = new Uint8Array(bytes);\n\n  for (var group = 0; group < groups; ++group) {\n    var digit0 = base64Map[s.charCodeAt(group * 4 + 0)];\n    var digit1 = base64Map[s.charCodeAt(group * 4 + 1)];\n    var digit2 = base64Map[s.charCodeAt(group * 4 + 2)];\n    var digit3 = base64Map[s.charCodeAt(group * 4 + 3)];\n    result[group * 3 + 0] = digit0 << 2 | digit1 >> 4;\n\n    if (group * 3 + 1 < bytes) {\n      result[group * 3 + 1] = (digit1 & 15) << 4 | digit2 >> 2;\n    }\n\n    if (group * 3 + 2 < bytes) {\n      result[group * 3 + 2] = (digit2 & 3) << 6 | digit3;\n    }\n  }\n\n  return result;\n}\n\nexports.base64ToBinary = base64ToBinary;\n/** Key types this library supports */\n\nvar KeyType;\n\n(function (KeyType) {\n  KeyType[KeyType[\"k1\"] = 0] = \"k1\";\n  KeyType[KeyType[\"r1\"] = 1] = \"r1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\n/** Public key data size, excluding type field */\n\n\nexports.publicKeyDataSize = 33;\n/** Private key data size, excluding type field */\n\nexports.privateKeyDataSize = 32;\n/** Signature data size, excluding type field */\n\nexports.signatureDataSize = 65;\n\nfunction digestSuffixRipemd160(data, suffix) {\n  var d = new Uint8Array(data.length + suffix.length);\n\n  for (var i = 0; i < data.length; ++i) {\n    d[i] = data[i];\n  }\n\n  for (var i = 0; i < suffix.length; ++i) {\n    d[data.length + i] = suffix.charCodeAt(i);\n  }\n\n  return ripemd160(d);\n}\n\nfunction stringToKey(s, type, size, suffix) {\n  var whole = base58ToBinary(size + 4, s);\n  var result = {\n    type: type,\n    data: new Uint8Array(whole.buffer, 0, size)\n  };\n  var digest = new Uint8Array(digestSuffixRipemd160(result.data, suffix));\n\n  if (digest[0] !== whole[size + 0] || digest[1] !== whole[size + 1] || digest[2] !== whole[size + 2] || digest[3] !== whole[size + 3]) {\n    throw new Error('checksum doesn\\'t match');\n  }\n\n  return result;\n}\n\nfunction keyToString(key, suffix, prefix) {\n  var digest = new Uint8Array(digestSuffixRipemd160(key.data, suffix));\n  var whole = new Uint8Array(key.data.length + 4);\n\n  for (var i = 0; i < key.data.length; ++i) {\n    whole[i] = key.data[i];\n  }\n\n  for (var i = 0; i < 4; ++i) {\n    whole[i + key.data.length] = digest[i];\n  }\n\n  return prefix + binaryToBase58(whole);\n}\n/** Convert key in `s` to binary form */\n\n\nfunction stringToPublicKey(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing public key');\n  }\n\n  if (s.substr(0, 3) === 'EOS') {\n    var whole = base58ToBinary(exports.publicKeyDataSize + 4, s.substr(3));\n    var key = {\n      type: KeyType.k1,\n      data: new Uint8Array(exports.publicKeyDataSize)\n    };\n\n    for (var i = 0; i < exports.publicKeyDataSize; ++i) {\n      key.data[i] = whole[i];\n    }\n\n    var digest = new Uint8Array(ripemd160(key.data));\n\n    if (digest[0] !== whole[exports.publicKeyDataSize] || digest[1] !== whole[34] || digest[2] !== whole[35] || digest[3] !== whole[36]) {\n      throw new Error('checksum doesn\\'t match');\n    }\n\n    return key;\n  } else if (s.substr(0, 7) === 'PUB_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.publicKeyDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'PUB_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.publicKeyDataSize, 'R1');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n}\n\nexports.stringToPublicKey = stringToPublicKey;\n/** Convert `key` to string (base-58) form */\n\nfunction publicKeyToString(key) {\n  if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'K1', 'PUB_K1_');\n  } else if (key.type === KeyType.r1 && key.data.length === exports.publicKeyDataSize) {\n    return keyToString(key, 'R1', 'PUB_R1_');\n  } else {\n    throw new Error('unrecognized public key format');\n  }\n}\n\nexports.publicKeyToString = publicKeyToString;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\n\nfunction convertLegacyPublicKey(s) {\n  if (s.substr(0, 3) === 'EOS') {\n    return publicKeyToString(stringToPublicKey(s));\n  }\n\n  return s;\n}\n\nexports.convertLegacyPublicKey = convertLegacyPublicKey;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\n\nfunction convertLegacyPublicKeys(keys) {\n  return keys.map(convertLegacyPublicKey);\n}\n\nexports.convertLegacyPublicKeys = convertLegacyPublicKeys;\n/** Convert key in `s` to binary form */\n\nfunction stringToPrivateKey(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing private key');\n  }\n\n  if (s.substr(0, 7) === 'PVT_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.privateKeyDataSize, 'R1');\n  } else {\n    throw new Error('unrecognized private key format');\n  }\n}\n\nexports.stringToPrivateKey = stringToPrivateKey;\n/** Convert `key` to string (base-58) form */\n\nfunction privateKeyToString(key) {\n  if (key.type === KeyType.r1) {\n    return keyToString(key, 'R1', 'PVT_R1_');\n  } else {\n    throw new Error('unrecognized private key format');\n  }\n}\n\nexports.privateKeyToString = privateKeyToString;\n/** Convert key in `s` to binary form */\n\nfunction stringToSignature(s) {\n  if (typeof s !== 'string') {\n    throw new Error('expected string containing signature');\n  }\n\n  if (s.substr(0, 7) === 'SIG_K1_') {\n    return stringToKey(s.substr(7), KeyType.k1, exports.signatureDataSize, 'K1');\n  } else if (s.substr(0, 7) === 'SIG_R1_') {\n    return stringToKey(s.substr(7), KeyType.r1, exports.signatureDataSize, 'R1');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n}\n\nexports.stringToSignature = stringToSignature;\n/** Convert `signature` to string (base-58) form */\n\nfunction signatureToString(signature) {\n  if (signature.type === KeyType.k1) {\n    return keyToString(signature, 'K1', 'SIG_K1_');\n  } else if (signature.type === KeyType.r1) {\n    return keyToString(signature, 'R1', 'SIG_R1_');\n  } else {\n    throw new Error('unrecognized signature format');\n  }\n}\n\nexports.signatureToString = signatureToString;","map":{"version":3,"mappings":";AAAA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,SAApB,CAA8BC,IAAhD;;AAEA,IAAMC,WAAW,GAAG,4DAApB;AACA,IAAMC,WAAW,GAAG,kEAApB;;AAEA,SAASC,iBAAT,GAA0B;EACtB,IAAMC,OAAO,GAAGC,KAAK,CAAC,GAAD,CAAL,CAAWC,IAAX,CAAgB,CAAC,CAAjB,CAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAAW,CAACO,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;IACzCH,OAAO,CAACH,WAAW,CAACQ,UAAZ,CAAuBF,CAAvB,CAAD,CAAP,GAAqCA,CAArC;EACH;;EACD,OAAOH,OAAP;AACH;;AAED,IAAMM,SAAS,GAAGP,iBAAiB,EAAnC;;AAEA,SAASQ,iBAAT,GAA0B;EACtB,IAAMC,OAAO,GAAGP,KAAK,CAAC,GAAD,CAAL,CAAWC,IAAX,CAAgB,CAAC,CAAjB,CAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAAW,CAACM,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;IACzCK,OAAO,CAACV,WAAW,CAACO,UAAZ,CAAuBF,CAAvB,CAAD,CAAP,GAAqCA,CAArC;EACH;;EACDK,OAAO,CAAC,IAAIH,UAAJ,CAAe,CAAf,CAAD,CAAP,GAA6B,CAA7B;EACA,OAAOG,OAAP;AACH;;AAED,IAAMC,SAAS,GAAGF,iBAAiB,EAAnC;AAEA;;AACA,SAAgBG,UAAhB,CAA2BC,MAA3B,EAA6C;EACzC,OAAO,CAACA,MAAM,CAACA,MAAM,CAACP,MAAP,GAAgB,CAAjB,CAAN,GAA4B,IAA7B,MAAuC,CAA9C;AACH;;AAFDQ;AAIA;;AACA,SAAgBC,MAAhB,CAAuBF,MAAvB,EAAyC;EACrC,IAAIG,KAAK,GAAG,CAAZ;;EACA,KAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,MAAM,CAACP,MAA3B,EAAmC,EAAED,CAArC,EAAwC;IACpC,IAAMY,CAAC,GAAG,CAAC,CAACJ,MAAM,CAACR,CAAD,CAAP,GAAa,IAAd,IAAsBW,KAAhC;IACAH,MAAM,CAACR,CAAD,CAAN,GAAYY,CAAZ;IACAD,KAAK,GAAGC,CAAC,IAAI,CAAb;EACH;AACJ;;AAPDH;AASA;;;;;AAIA,SAAgBI,eAAhB,CAAgCC,IAAhC,EAA8CC,CAA9C,EAAuD;EACnD,IAAMC,MAAM,GAAG,IAAIC,UAAJ,CAAeH,IAAf,CAAf;;EACA,KAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,CAAC,CAACd,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;IAC/B,IAAMkB,QAAQ,GAAGH,CAAC,CAACb,UAAF,CAAaF,CAAb,CAAjB;;IACA,IAAIkB,QAAQ,GAAG,IAAIhB,UAAJ,CAAe,CAAf,CAAX,IAAgCgB,QAAQ,GAAG,IAAIhB,UAAJ,CAAe,CAAf,CAA/C,EAAkE;MAC9D,MAAM,IAAIiB,KAAJ,CAAU,gBAAV,CAAN;IACH;;IACD,IAAIR,KAAK,GAAGO,QAAQ,GAAG,IAAIhB,UAAJ,CAAe,CAAf,CAAvB;;IACA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0B,EAAEM,CAA5B,EAA+B;MAC3B,IAAMR,CAAC,GAAGI,MAAM,CAACI,CAAD,CAAN,GAAY,EAAZ,GAAiBT,KAA3B;MACAK,MAAM,CAACI,CAAD,CAAN,GAAYR,CAAZ;MACAD,KAAK,GAAGC,CAAC,IAAI,CAAb;IACH;;IACD,IAAID,KAAJ,EAAW;MACP,MAAM,IAAIQ,KAAJ,CAAU,wBAAV,CAAN;IACH;EACJ;;EACD,OAAOH,MAAP;AACH;;AAlBDP;AAoBA;;;;;AAIA,SAAgBY,qBAAhB,CAAsCP,IAAtC,EAAoDC,CAApD,EAA6D;EACzD,IAAMO,QAAQ,GAAGP,CAAC,CAAC,CAAD,CAAD,KAAS,GAA1B;;EACA,IAAIO,QAAJ,EAAc;IACVP,CAAC,GAAGA,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAJ;EACH;;EACD,IAAMP,MAAM,GAAGH,eAAe,CAACC,IAAD,EAAOC,CAAP,CAA9B;;EACA,IAAIO,QAAJ,EAAc;IACVZ,MAAM,CAACM,MAAD,CAAN;;IACA,IAAI,CAACT,UAAU,CAACS,MAAD,CAAf,EAAyB;MACrB,MAAM,IAAIG,KAAJ,CAAU,wBAAV,CAAN;IACH;EACJ,CALD,MAKO,IAAIZ,UAAU,CAACS,MAAD,CAAd,EAAwB;IAC3B,MAAM,IAAIG,KAAJ,CAAU,wBAAV,CAAN;EACH;;EACD,OAAOH,MAAP;AACH;;AAfDP;AAiBA;;;;;AAIA,SAAgBe,eAAhB,CAAgChB,MAAhC,EAAoDiB,SAApD,EAAiE;EAAb;IAAAA;EAAa;;EAC7D,IAAMT,MAAM,GAAGlB,KAAK,CAAC2B,SAAD,CAAL,CAAiB1B,IAAjB,CAAsB,IAAIG,UAAJ,CAAe,CAAf,CAAtB,CAAf;;EACA,KAAK,IAAIF,CAAC,GAAGQ,MAAM,CAACP,MAAP,GAAgB,CAA7B,EAAgCD,CAAC,IAAI,CAArC,EAAwC,EAAEA,CAA1C,EAA6C;IACzC,IAAIW,KAAK,GAAGH,MAAM,CAACR,CAAD,CAAlB;;IACA,KAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACf,MAA3B,EAAmC,EAAEmB,CAArC,EAAwC;MACpC,IAAMR,CAAC,GAAG,CAAEI,MAAM,CAACI,CAAD,CAAN,GAAY,IAAIlB,UAAJ,CAAe,CAAf,CAAb,IAAmC,CAApC,IAAyCS,KAAnD;MACAK,MAAM,CAACI,CAAD,CAAN,GAAY,IAAIlB,UAAJ,CAAe,CAAf,IAAoBU,CAAC,GAAG,EAApC;MACAD,KAAK,GAAIC,CAAC,GAAG,EAAL,GAAW,CAAnB;IACH;;IACD,OAAOD,KAAP,EAAc;MACVK,MAAM,CAACU,IAAP,CAAY,IAAIxB,UAAJ,CAAe,CAAf,IAAoBS,KAAK,GAAG,EAAxC;MACAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,CAAvB;IACH;EACJ;;EACDK,MAAM,CAACW,OAAP;EACA,OAAOC,MAAM,CAACC,YAAP,CAAmBC,KAAnB,SAAMC,SAAiBf,MAAjB,CAAN,CAAP;AACH;;AAhBDP;AAkBA;;;;;AAIA,SAAgBuB,qBAAhB,CAAsCxB,MAAtC,EAA0DiB,SAA1D,EAAuE;EAAb;IAAAA;EAAa;;EACnE,IAAIlB,UAAU,CAACC,MAAD,CAAd,EAAwB;IACpB,IAAMI,CAAC,GAAGJ,MAAM,CAACyB,KAAP,EAAV;IACAvB,MAAM,CAACE,CAAD,CAAN;IACA,OAAO,MAAMY,eAAe,CAACZ,CAAD,EAAIa,SAAJ,CAA5B;EACH;;EACD,OAAOD,eAAe,CAAChB,MAAD,EAASiB,SAAT,CAAtB;AACH;;AAPDhB;AASA;;;;;AAIA,SAAgByB,cAAhB,CAA+BpB,IAA/B,EAA6CC,CAA7C,EAAsD;EAClD,IAAMC,MAAM,GAAG,IAAIC,UAAJ,CAAeH,IAAf,CAAf;;EACA,KAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,CAAC,CAACd,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;IAC/B,IAAIW,KAAK,GAAGR,SAAS,CAACY,CAAC,CAACb,UAAF,CAAaF,CAAb,CAAD,CAArB;;IACA,IAAIW,KAAK,GAAG,CAAZ,EAAe;MACX,MAAM,IAAIQ,KAAJ,CAAU,uBAAV,CAAN;IACH;;IACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0B,EAAEM,CAA5B,EAA+B;MAC3B,IAAMR,CAAC,GAAGI,MAAM,CAACI,CAAD,CAAN,GAAY,EAAZ,GAAiBT,KAA3B;MACAK,MAAM,CAACI,CAAD,CAAN,GAAYR,CAAZ;MACAD,KAAK,GAAGC,CAAC,IAAI,CAAb;IACH;;IACD,IAAID,KAAJ,EAAW;MACP,MAAM,IAAIQ,KAAJ,CAAU,+BAAV,CAAN;IACH;EACJ;;EACDH,MAAM,CAACW,OAAP;EACA,OAAOX,MAAP;AACH;;AAlBDP;AAoBA;;;;;AAIA,SAAgB0B,cAAhB,CAA+B3B,MAA/B,EAAmDiB,SAAnD,EAAgE;EAAb;IAAAA;EAAa;;;;EAC5D,IAAMT,MAAM,GAAG,EAAf;;;IACA,KAAmB,iCAAMoB,4BAAzB,EAAyB,gBAAzB,EAAyBA,4BAAzB,EAA2B;MAAtB,IAAMC,IAAI,mBAAV;MACD,IAAI1B,KAAK,GAAG0B,IAAZ;;MACA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACf,MAA3B,EAAmC,EAAEmB,CAArC,EAAwC;QACpC,IAAMR,CAAC,GAAG,CAACT,SAAS,CAACa,MAAM,CAACI,CAAD,CAAP,CAAT,IAAwB,CAAzB,IAA8BT,KAAxC;QACAK,MAAM,CAACI,CAAD,CAAN,GAAY1B,WAAW,CAACQ,UAAZ,CAAuBU,CAAC,GAAG,EAA3B,CAAZ;QACAD,KAAK,GAAIC,CAAC,GAAG,EAAL,GAAW,CAAnB;MACH;;MACD,OAAOD,KAAP,EAAc;QACVK,MAAM,CAACU,IAAP,CAAYhC,WAAW,CAACQ,UAAZ,CAAuBS,KAAK,GAAG,EAA/B,CAAZ;QACAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,CAAvB;MACH;IACJ;;;;;;;;;;;;;;IACD,KAAmB,iCAAM2B,4BAAzB,EAAyB,gBAAzB,EAAyBA,4BAAzB,EAA2B;MAAtB,IAAMD,IAAI,mBAAV;;MACD,IAAIA,IAAJ,EAAU;QACN;MACH,CAFD,MAEO;QACHrB,MAAM,CAACU,IAAP,CAAY,IAAIxB,UAAJ,CAAe,CAAf,CAAZ;MACH;IACJ;;;;;;;;;;;;;EACDc,MAAM,CAACW,OAAP;EACA,OAAOC,MAAM,CAACC,YAAP,CAAmBC,KAAnB,SAAMC,SAAiBf,MAAjB,CAAN,CAAP;AACH;;AAvBDP;AAyBA;;AACA,SAAgB8B,cAAhB,CAA+BxB,CAA/B,EAAwC;EACpC,IAAIyB,GAAG,GAAGzB,CAAC,CAACd,MAAZ;;EACA,IAAI,CAACuC,GAAG,GAAG,CAAP,MAAc,CAAd,IAAmBzB,CAAC,CAACyB,GAAG,GAAG,CAAP,CAAD,KAAe,GAAtC,EAA2C;IACvCA,GAAG,IAAI,CAAP;EACH,CAJmC,CAIlC;;;EACF,IAAI,CAACA,GAAG,GAAG,CAAP,MAAc,CAAlB,EAAqB;IACjB,MAAM,IAAIrB,KAAJ,CAAU,uCAAV,CAAN;EACH;;EACD,IAAMsB,MAAM,GAAGD,GAAG,IAAI,CAAtB;EACA,IAAIE,KAAK,GAAGD,MAAM,GAAG,CAArB;;EACA,IAAID,GAAG,GAAG,CAAN,IAAWzB,CAAC,CAACyB,GAAG,GAAG,CAAP,CAAD,KAAe,GAA9B,EAAmC;IAC/B,IAAIzB,CAAC,CAACyB,GAAG,GAAG,CAAP,CAAD,KAAe,GAAnB,EAAwB;MACpBE,KAAK,IAAI,CAAT;IACH,CAFD,MAEO;MACHA,KAAK,IAAI,CAAT;IACH;EACJ;;EACD,IAAM1B,MAAM,GAAG,IAAIC,UAAJ,CAAeyB,KAAf,CAAf;;EAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,MAA5B,EAAoC,EAAEE,KAAtC,EAA6C;IACzC,IAAMC,MAAM,GAAGtC,SAAS,CAACS,CAAC,CAACb,UAAF,CAAayC,KAAK,GAAG,CAAR,GAAY,CAAzB,CAAD,CAAxB;IACA,IAAME,MAAM,GAAGvC,SAAS,CAACS,CAAC,CAACb,UAAF,CAAayC,KAAK,GAAG,CAAR,GAAY,CAAzB,CAAD,CAAxB;IACA,IAAMG,MAAM,GAAGxC,SAAS,CAACS,CAAC,CAACb,UAAF,CAAayC,KAAK,GAAG,CAAR,GAAY,CAAzB,CAAD,CAAxB;IACA,IAAMI,MAAM,GAAGzC,SAAS,CAACS,CAAC,CAACb,UAAF,CAAayC,KAAK,GAAG,CAAR,GAAY,CAAzB,CAAD,CAAxB;IACA3B,MAAM,CAAC2B,KAAK,GAAG,CAAR,GAAY,CAAb,CAAN,GAAyBC,MAAM,IAAI,CAAX,GAAiBC,MAAM,IAAI,CAAnD;;IACA,IAAIF,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBD,KAApB,EAA2B;MACvB1B,MAAM,CAAC2B,KAAK,GAAG,CAAR,GAAY,CAAb,CAAN,GAAyB,CAACE,MAAM,GAAG,EAAV,KAAiB,CAAlB,GAAwBC,MAAM,IAAI,CAA1D;IACH;;IACD,IAAIH,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBD,KAApB,EAA2B;MACvB1B,MAAM,CAAC2B,KAAK,GAAG,CAAR,GAAY,CAAb,CAAN,GAAyB,CAACG,MAAM,GAAG,CAAV,KAAgB,CAAjB,GAAsBC,MAA9C;IACH;EACJ;;EACD,OAAO/B,MAAP;AACH;;AAjCDP;AAmCA;;AACA,IAAYuC,OAAZ;;AAAA,WAAYA,OAAZ,EAAmB;EACfA;EACAA;AACH,CAHD,EAAYA,OAAO,GAAPvC,sCAAO,EAAP,CAAZ;AAKA;;;AACaA,4BAAoB,EAApB;AAEb;;AACaA,6BAAqB,EAArB;AAEb;;AACaA,4BAAoB,EAApB;;AAQb,SAASwC,qBAAT,CAA+BC,IAA/B,EAAiDC,MAAjD,EAA+D;EAC3D,IAAMC,CAAC,GAAG,IAAInC,UAAJ,CAAeiC,IAAI,CAACjD,MAAL,GAAckD,MAAM,CAAClD,MAApC,CAAV;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkD,IAAI,CAACjD,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;IAClCoD,CAAC,CAACpD,CAAD,CAAD,GAAOkD,IAAI,CAAClD,CAAD,CAAX;EACH;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmD,MAAM,CAAClD,MAA3B,EAAmC,EAAED,CAArC,EAAwC;IACpCoD,CAAC,CAACF,IAAI,CAACjD,MAAL,GAAcD,CAAf,CAAD,GAAqBmD,MAAM,CAACjD,UAAP,CAAkBF,CAAlB,CAArB;EACH;;EACD,OAAOV,SAAS,CAAC8D,CAAD,CAAhB;AACH;;AAED,SAASC,WAAT,CAAqBtC,CAArB,EAAgCuC,IAAhC,EAA+CxC,IAA/C,EAA6DqC,MAA7D,EAA2E;EACvE,IAAMI,KAAK,GAAGrB,cAAc,CAACpB,IAAI,GAAG,CAAR,EAAWC,CAAX,CAA5B;EACA,IAAMC,MAAM,GAAG;IAAEsC,IAAI,MAAN;IAAQJ,IAAI,EAAE,IAAIjC,UAAJ,CAAesC,KAAK,CAACC,MAArB,EAA6B,CAA7B,EAAgC1C,IAAhC;EAAd,CAAf;EACA,IAAM2C,MAAM,GAAG,IAAIxC,UAAJ,CAAegC,qBAAqB,CAACjC,MAAM,CAACkC,IAAR,EAAcC,MAAd,CAApC,CAAf;;EACA,IAAIM,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAACzC,IAAI,GAAG,CAAR,CAAnB,IAAiC2C,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAACzC,IAAI,GAAG,CAAR,CAApD,IACG2C,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAACzC,IAAI,GAAG,CAAR,CADtB,IACoC2C,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAACzC,IAAI,GAAG,CAAR,CAD3D,EACuE;IACnE,MAAM,IAAIK,KAAJ,CAAU,yBAAV,CAAN;EACH;;EACD,OAAOH,MAAP;AACH;;AAED,SAAS0C,WAAT,CAAqBC,GAArB,EAA+BR,MAA/B,EAA+CS,MAA/C,EAA6D;EACzD,IAAMH,MAAM,GAAG,IAAIxC,UAAJ,CAAegC,qBAAqB,CAACU,GAAG,CAACT,IAAL,EAAWC,MAAX,CAApC,CAAf;EACA,IAAMI,KAAK,GAAG,IAAItC,UAAJ,CAAe0C,GAAG,CAACT,IAAJ,CAASjD,MAAT,GAAkB,CAAjC,CAAd;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2D,GAAG,CAACT,IAAJ,CAASjD,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;IACtCuD,KAAK,CAACvD,CAAD,CAAL,GAAW2D,GAAG,CAACT,IAAJ,CAASlD,CAAT,CAAX;EACH;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;IACxBuD,KAAK,CAACvD,CAAC,GAAG2D,GAAG,CAACT,IAAJ,CAASjD,MAAd,CAAL,GAA6BwD,MAAM,CAACzD,CAAD,CAAnC;EACH;;EACD,OAAO4D,MAAM,GAAGzB,cAAc,CAACoB,KAAD,CAA9B;AACH;AAED;;;AACA,SAAgBM,iBAAhB,CAAkC9C,CAAlC,EAA2C;EACvC,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;IACvB,MAAM,IAAII,KAAJ,CAAU,uCAAV,CAAN;EACH;;EACD,IAAIJ,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,KAAvB,EAA8B;IAC1B,IAAMgC,KAAK,GAAGrB,cAAc,CAACzB,4BAAoB,CAArB,EAAwBM,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAxB,CAA5B;IACA,IAAMoC,GAAG,GAAG;MAAEL,IAAI,EAAEN,OAAO,CAACc,EAAhB;MAAoBZ,IAAI,EAAE,IAAIjC,UAAJ,CAAeR,yBAAf;IAA1B,CAAZ;;IACA,KAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,yBAApB,EAAuC,EAAET,CAAzC,EAA4C;MACxC2D,GAAG,CAACT,IAAJ,CAASlD,CAAT,IAAcuD,KAAK,CAACvD,CAAD,CAAnB;IACH;;IACD,IAAMyD,MAAM,GAAG,IAAIxC,UAAJ,CAAe3B,SAAS,CAACqE,GAAG,CAACT,IAAL,CAAxB,CAAf;;IACA,IAAIO,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAAC9C,yBAAD,CAAnB,IAA0CgD,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAAC,EAAD,CAA7D,IACGE,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAAC,EAAD,CADtB,IAC8BE,MAAM,CAAC,CAAD,CAAN,KAAcF,KAAK,CAAC,EAAD,CADrD,EAC2D;MACvD,MAAM,IAAIpC,KAAJ,CAAU,yBAAV,CAAN;IACH;;IACD,OAAOwC,GAAP;EACH,CAZD,MAYO,IAAI5C,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAvB,EAAkC;IACrC,OAAO8B,WAAW,CAACtC,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAD,EAAcyB,OAAO,CAACc,EAAtB,EAA0BrD,yBAA1B,EAA6C,IAA7C,CAAlB;EACH,CAFM,MAEA,IAAIM,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAvB,EAAkC;IACrC,OAAO8B,WAAW,CAACtC,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAD,EAAcyB,OAAO,CAACe,EAAtB,EAA0BtD,yBAA1B,EAA6C,IAA7C,CAAlB;EACH,CAFM,MAEA;IACH,MAAM,IAAIU,KAAJ,CAAU,gCAAV,CAAN;EACH;AACJ;;AAvBDV;AAyBA;;AACA,SAAgBuD,iBAAhB,CAAkCL,GAAlC,EAA0C;EACtC,IAAIA,GAAG,CAACL,IAAJ,KAAaN,OAAO,CAACc,EAArB,IAA2BH,GAAG,CAACT,IAAJ,CAASjD,MAAT,KAAoBQ,yBAAnD,EAAsE;IAClE,OAAOiD,WAAW,CAACC,GAAD,EAAM,IAAN,EAAY,SAAZ,CAAlB;EACH,CAFD,MAEO,IAAIA,GAAG,CAACL,IAAJ,KAAaN,OAAO,CAACe,EAArB,IAA2BJ,GAAG,CAACT,IAAJ,CAASjD,MAAT,KAAoBQ,yBAAnD,EAAsE;IACzE,OAAOiD,WAAW,CAACC,GAAD,EAAM,IAAN,EAAY,SAAZ,CAAlB;EACH,CAFM,MAEA;IACH,MAAM,IAAIxC,KAAJ,CAAU,gCAAV,CAAN;EACH;AACJ;;AARDV;AAUA;;;;AAGA,SAAgBwD,sBAAhB,CAAuClD,CAAvC,EAAgD;EAC5C,IAAIA,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,KAAvB,EAA8B;IAC1B,OAAOyC,iBAAiB,CAACH,iBAAiB,CAAC9C,CAAD,CAAlB,CAAxB;EACH;;EACD,OAAOA,CAAP;AACH;;AALDN;AAOA;;;;AAGA,SAAgByD,uBAAhB,CAAwCC,IAAxC,EAAsD;EAClD,OAAOA,IAAI,CAACC,GAAL,CAASH,sBAAT,CAAP;AACH;;AAFDxD;AAIA;;AACA,SAAgB4D,kBAAhB,CAAmCtD,CAAnC,EAA4C;EACxC,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;IACvB,MAAM,IAAII,KAAJ,CAAU,wCAAV,CAAN;EACH;;EACD,IAAIJ,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAvB,EAAkC;IAC9B,OAAO8B,WAAW,CAACtC,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAD,EAAcyB,OAAO,CAACe,EAAtB,EAA0BtD,0BAA1B,EAA8C,IAA9C,CAAlB;EACH,CAFD,MAEO;IACH,MAAM,IAAIU,KAAJ,CAAU,iCAAV,CAAN;EACH;AACJ;;AATDV;AAWA;;AACA,SAAgB6D,kBAAhB,CAAmCX,GAAnC,EAA2C;EACvC,IAAIA,GAAG,CAACL,IAAJ,KAAaN,OAAO,CAACe,EAAzB,EAA6B;IACzB,OAAOL,WAAW,CAACC,GAAD,EAAM,IAAN,EAAY,SAAZ,CAAlB;EACH,CAFD,MAEO;IACH,MAAM,IAAIxC,KAAJ,CAAU,iCAAV,CAAN;EACH;AACJ;;AANDV;AAQA;;AACA,SAAgB8D,iBAAhB,CAAkCxD,CAAlC,EAA2C;EACvC,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;IACvB,MAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;EACH;;EACD,IAAIJ,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAvB,EAAkC;IAC9B,OAAO8B,WAAW,CAACtC,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAD,EAAcyB,OAAO,CAACc,EAAtB,EAA0BrD,yBAA1B,EAA6C,IAA7C,CAAlB;EACH,CAFD,MAEO,IAAIM,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAvB,EAAkC;IACrC,OAAO8B,WAAW,CAACtC,CAAC,CAACQ,MAAF,CAAS,CAAT,CAAD,EAAcyB,OAAO,CAACe,EAAtB,EAA0BtD,yBAA1B,EAA6C,IAA7C,CAAlB;EACH,CAFM,MAEA;IACH,MAAM,IAAIU,KAAJ,CAAU,+BAAV,CAAN;EACH;AACJ;;AAXDV;AAaA;;AACA,SAAgB+D,iBAAhB,CAAkCC,SAAlC,EAAgD;EAC5C,IAAIA,SAAS,CAACnB,IAAV,KAAmBN,OAAO,CAACc,EAA/B,EAAmC;IAC/B,OAAOJ,WAAW,CAACe,SAAD,EAAY,IAAZ,EAAkB,SAAlB,CAAlB;EACH,CAFD,MAEO,IAAIA,SAAS,CAACnB,IAAV,KAAmBN,OAAO,CAACe,EAA/B,EAAmC;IACtC,OAAOL,WAAW,CAACe,SAAD,EAAY,IAAZ,EAAkB,SAAlB,CAAlB;EACH,CAFM,MAEA;IACH,MAAM,IAAItD,KAAJ,CAAU,+BAAV,CAAN;EACH;AACJ;;AARDV","names":["ripemd160","require","RIPEMD160","hash","base58Chars","base64Chars","create_base58_map","base58M","Array","fill","i","length","charCodeAt","base58Map","create_base64_map","base64M","base64Map","isNegative","bignum","exports","negate","carry","x","decimalToBinary","size","s","result","Uint8Array","srcDigit","Error","j","signedDecimalToBinary","negative","substr","binaryToDecimal","minDigits","push","reverse","String","fromCharCode","apply","__spread","signedBinaryToDecimal","slice","base58ToBinary","binaryToBase58","bignum_1_1","byte","bignum_2_1","base64ToBinary","len","groups","bytes","group","digit0","digit1","digit2","digit3","KeyType","digestSuffixRipemd160","data","suffix","d","stringToKey","type","whole","buffer","digest","keyToString","key","prefix","stringToPublicKey","k1","r1","publicKeyToString","convertLegacyPublicKey","convertLegacyPublicKeys","keys","map","stringToPrivateKey","privateKeyToString","stringToSignature","signatureToString","signature"],"sources":["../src/eosjs-numeric.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}